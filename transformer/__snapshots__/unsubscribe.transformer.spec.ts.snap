// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`unsubscribe transformer should create ngOnDestroy method and subscriptions field 1`] = `
"var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === \\"object\\" && typeof Reflect.decorate === \\"function\\") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
let Foo = class Foo {
    constructor() {
        this.subscriptions = [];
    }
    ngOnDestroy() {
        this.subscriptions.forEach(sub => sub.unsubscribe());
    }
};
Foo = __decorate([
    Component({
        selector: 'test-selector'
    })
], Foo);
"
`;

exports[`unsubscribe transformer should keep existing ngOnDestroy method 1`] = `
"var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === \\"object\\" && typeof Reflect.decorate === \\"function\\") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
let Foo = class Foo {
    constructor() {
        this.subscriptions = [];
    }
    ngOnDestroy() {
        console.log('Keep me there plz!');
        this.subscriptions.forEach(sub => sub.unsubscribe());
    }
};
Foo = __decorate([
    Component({
        selector: 'test-selector'
    })
], Foo);
"
`;
